/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type {
  CoreApiRemoveBookmarkItemMutationRequest,
  CoreApiRemoveBookmarkItemMutationResponse,
  CoreApiRemoveBookmarkItem404,
} from '../types/CoreApiRemoveBookmarkItem.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'

export const coreApiRemoveBookmarkItemMutationKey = () => [{ url: '/api/v1/bookmarks/' }] as const

export type CoreApiRemoveBookmarkItemMutationKey = ReturnType<typeof coreApiRemoveBookmarkItemMutationKey>

/**
 * @description Remove bookmark items
 * @summary Remove Bookmark Item
 * {@link /api/v1/bookmarks/}
 */
export async function coreApiRemoveBookmarkItem(
  data: CoreApiRemoveBookmarkItemMutationRequest,
  config: Partial<RequestConfig<CoreApiRemoveBookmarkItemMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    CoreApiRemoveBookmarkItemMutationResponse,
    ResponseErrorConfig<CoreApiRemoveBookmarkItem404>,
    CoreApiRemoveBookmarkItemMutationRequest
  >({ method: 'DELETE', url: `/api/v1/bookmarks/`, data, ...requestConfig })
  return res.data
}

/**
 * @description Remove bookmark items
 * @summary Remove Bookmark Item
 * {@link /api/v1/bookmarks/}
 */
export function useCoreApiRemoveBookmarkItem<TContext>(
  options: {
    mutation?: UseMutationOptions<
      CoreApiRemoveBookmarkItemMutationResponse,
      ResponseErrorConfig<CoreApiRemoveBookmarkItem404>,
      { data: CoreApiRemoveBookmarkItemMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<CoreApiRemoveBookmarkItemMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation: { client: queryClient, ...mutationOptions } = {}, client: config = {} } = options ?? {}
  const mutationKey = mutationOptions?.mutationKey ?? coreApiRemoveBookmarkItemMutationKey()

  return useMutation<
    CoreApiRemoveBookmarkItemMutationResponse,
    ResponseErrorConfig<CoreApiRemoveBookmarkItem404>,
    { data: CoreApiRemoveBookmarkItemMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ data }) => {
        return coreApiRemoveBookmarkItem(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}